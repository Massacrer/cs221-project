Status: Draft
Author: was4
Date created: 21/10/2014

RPSR Android app (RPSRrec) - UI design

Activities required:
	Main
	Settings
	New Recording
	Recording
	Record Species
	Recordings Management
	Synchronisation

Description of Activities:
	Main
		Main activity, reached on launch
		Required: Logo (? discuss), buttons to provide links described below
		Links to: New Recording, Recordings Management, Synchronisation, Settings
	
	Settings
		Use Android-provided Settings infrastructure.
		Required: Settings controls - user name, email, phone (for autofill), others as appropriate (discuss)
		Links to: none
	
	New Recording
		Prepares to start a new recording - gets site & user details (see seqars 3.1.1 FR1, 2). Passes this information to new Recording
		Required: Text entry fields to capture required information, button to start recording (launches new Recording activity)
		Links to: Recording
	
	Recording
		Context of a visit to a reserve. Contains a list of species found so far, and ability to add new ones (see Links To), delete and update existing records, and to end recording. Should also be able to manage existing recordings, in which case the functionality to add species and stop the recording should be disabled.
		Required: list of species found so far, ability to edit or delete these species from the list, button to add new species to list (see Links To), ability to stop recording (should close activity, what should the user be taken to? Recordings Management? Discuss)
		Links to: Record Species (both for new species and update of existing - see Record Species)
	
	Record Species
		Details of a single species discovered in a Recording. See seqars 3.1.1 FR3, 4. Should have blank fields for a new Species, or contain existing data if a recorded species is being modified.
		Required: Fields for entry of text data specified in FR3&4 (consider combo box / other convenient selection method for species name (FR3), drop-down or other for DAFOR rating), mechanism to capture and display photos for scene and specimen using device camera and Android operating system functionality (see note at bottom of document re: Android camera)
		Links to: none
	
	Recordings Management
		List of all recordings made on the device, with functionality to delete a recording, open it for editing (using Recording activity), or to synchronise it to the server (how should recordings be handled once uploaded? Editable, re-uploadable? Discuss).
		Required: List of recordings, ability to delete, edit or sync individual recordings. Consider ability to select multiple recordings for deletion / syncing.
		Links to: Synchronisation, Recording
	
	Synchronisation
		Interface to upload a recording (multiple?) to the server.
		Required: information on recording(s) to be uploaded (list?), ability to enter authentication information as appropriate (see documentation on security and authentication) (could be done as a dialog, etc), button to start upload
		Links to: none (consider ability to make last-minute edits to recordings, select recording to edit?)
	
Note on Android camera functionality:
	The observant reader will notice that I have not described an activity to take pictures or select existing ones from the device camera roll, as specified in seqars 3.1.1 FR4. This is because, on Android, an app is not expected to handle certain specialised tasks, such as taking pictures, by itself, unless that is it's primary purpose or it requires advanced functionality. The app should instead delegate that action to an app that is designed specifically for the purpose, in this case an existing Camera app on the device.
	Our app should simply request that the operating system launch a Camera app for us, which can then be used to take a photo in the way the user is used to, and return it to our app for us to use. In a similar way, the operating system provides centralised management of multiple types of data, including images taken by the camera. It would be pointless for our app to reinvent the wheel when we can simply ask the device to display an image selection menu for us. (Implementation note: this will use a Content Resolver as provided by the operating system)